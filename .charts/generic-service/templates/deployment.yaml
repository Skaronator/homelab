apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "generic-service.name" . }}
  labels:
    {{- include "generic-service.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  revisionHistoryLimit: 2
  strategy:
    type: {{ .Values.strategyType }}
  selector:
    matchLabels:
      {{- include "generic-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "generic-service.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "generic-service.name" . }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      securityContext: {{- toYaml .Values.podSecurityContext | nindent 8 }}
      hostNetwork: {{ .Values.hostNetwork }}
      {{- if .Values.hostNetwork }}
      dnsPolicy: ClusterFirstWithHostNet
      {{- end }}
      {{- if .Values.hostPaths }}
      initContainers:
      - name: prepare-storage
        image: "{{ .Values.helper.image.repository }}:{{ .Values.helper.image.tag }}"
        securityContext:
          allowPrivilegeEscalation: false
          runAsUser: 0
        command:
        - /bin/sh
        args:
        - -c
        - |
          set -ex;
          {{- range .Values.hostPaths }}
          {{- if not (has .type (list "CharDevice")) }}
          chmod -R 777 {{ .containerPath | quote }};
          {{- end }}
          {{- end }}
        volumeMounts:
        {{- range .Values.hostPaths }}
        - name: {{ .name }}
          mountPath: {{ .containerPath | quote }}
        {{- end }}
      {{- end }}
      containers:
      - name: {{ include "generic-service.name" . }}
        securityContext: {{- toYaml .Values.securityContext | nindent 10 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- with .Values.args }}
        args: {{ toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.command }}
        command: {{ toYaml . | nindent 8 }}
        {{- end }}
        env:
      {{- if .Values.database.enabled }}
        - name: DB_HOST
          value: {{ include "database.name" . }}
        - name: DB_PORT
          value: "3306"
        - name: DB_USERNAME
          value: {{ include "database.username" . }}
        - name: DB_DATABASE
          value: {{ include "database.database" . }}
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "database.name" . }}
              key: userPassword
      {{- end }}
        - name: TZ
          value: Europe/Berlin
      {{- range $key, $value := .Values.secretEnvs }}
        - name: {{ $key | quote }}
          valueFrom:
            secretKeyRef:
              name: {{ include "generic-service.name" $ }}
              key: {{ $key | quote }}
      {{- end }}
      {{- range $key, $value := .Values.envs }}
        - name: {{ $key | quote }}
          value: {{ $value | quote}}
      {{- end }}
      {{- if .Values.ports }}
        ports:
        {{- range .Values.ports }}
        - name: {{ .name }}
          containerPort: {{ .containerPort }}
          protocol: {{ .protocol | default "TCP" }}
        {{- end }}
      {{- end }}
      {{- if and .Values.ports .Values.health.enabled }}
        startupProbe:
          {{- include "generic-service.podHealthCheck" . | indent 10 }}
          failureThreshold: 12
        livenessProbe:
          {{- include "generic-service.podHealthCheck" . | indent 10 }}
        readinessProbe:
          {{- include "generic-service.podHealthCheck" . | indent 10 }}
      {{- end }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        {{- if or .Values.configMaps .Values.hostPaths }}
        volumeMounts:
        {{- range .Values.configMaps }}
        - name: config
          mountPath: {{ printf "%s/%s" .mountPath .subPath | quote }}
          subPath: {{ .subPath | quote }}
        {{- end }}
        {{- range .Values.hostPaths }}
        - name: {{ .name }}
          mountPath: {{ .containerPath | quote }}
          readOnly: {{ .readOnly | default false }}
        {{- end }}
        {{- end -}}
      {{- if or .Values.configMaps .Values.hostPaths }}
      volumes:
      {{- if .Values.configMaps }}
      - name: config
        configMap:
          name: {{ include "generic-service.name" . }}
      {{- end }}
      {{- range .Values.hostPaths }}
      - name: {{ .name }}
        hostPath:
          path: {{ .hostPath | quote }}
          type: {{ .type | default "DirectoryOrCreate" }}
      {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
