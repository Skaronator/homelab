configs:
  params:
    controller.diff.server.side: "true"
    # "Temporary" until BackendTLSPolicy is implemented https://github.com/cilium/cilium/issues/31352
    server.insecure: "true"
  cm:
    # This is default MINUS ENdpoints
    resource.exclusions: |
      ### Network resources created by the Kubernetes control plane and excluded to reduce the number of watched events and UI clutter
      - apiGroups:
        - ''
        - discovery.k8s.io
        kinds:
        - EndpointSlice
      ### Internal Kubernetes resources excluded reduce the number of watched events
      - apiGroups:
        - coordination.k8s.io
        kinds:
        - Lease
      ### Internal Kubernetes Authz/Authn resources excluded reduce the number of watched events
      - apiGroups:
        - authentication.k8s.io
        - authorization.k8s.io
        kinds:
        - SelfSubjectReview
        - TokenReview
        - LocalSubjectAccessReview
        - SelfSubjectAccessReview
        - SelfSubjectRulesReview
        - SubjectAccessReview
      ### Intermediate Certificate Request excluded reduce the number of watched events
      - apiGroups:
        - certificates.k8s.io
        kinds:
        - CertificateSigningRequest
      - apiGroups:
        - cert-manager.io
        kinds:
        - CertificateRequest
      ### Cilium internal resources excluded reduce the number of watched events and UI Clutter
      - apiGroups:
        - cilium.io
        kinds:
        - CiliumIdentity
        - CiliumEndpoint
        - CiliumEndpointSlice
      ### Kyverno intermediate and reporting resources excluded reduce the number of watched events and improve performance
      - apiGroups:
        - kyverno.io
        - reports.kyverno.io
        - wgpolicyk8s.io
        kinds:
        - PolicyReport
        - ClusterPolicyReport
        - EphemeralReport
        - ClusterEphemeralReport
        - AdmissionReport
        - ClusterAdmissionReport
        - BackgroundScanReport
        - ClusterBackgroundScanReport
        - UpdateRequest
  cmp:
    create: true
    plugins:
      # This plugin is mostly based on https://github.com/argoproj/argo-cd/issues/10745#issuecomment-1949298357
      kustomize-helm:
        parameters:
          static:
            - name: NAMESPACE
              title: Namespace of the application
              required: true
              itemType: string
              collectionType: string
        generate:
          command: ["bash", "-c"]
          args: ["kustomize edit set namespace -- \"$PARAM_NAMESPACE\" && kustomize build --enable-helm --helm-command '/home/argocd/cmp-server/config/command.sh'"]

repoServer:
  extraContainers:
    - name: cmp-kustomize-helm
      command: ["/var/run/argocd/argocd-cmp-server"]
      image: |-
        {{ default .Values.global.image.repository .Values.repoServer.image.repository }}:{{ default (include "argo-cd.defaultTag" .) .Values.repoServer.image.tag }}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        runAsNonRoot: true
        runAsUser: 999
      volumeMounts:
        - name: var-files
          mountPath: /var/run/argocd
        - name: plugins
          mountPath: /home/argocd/cmp-server/plugins
        - name: argocd-cmp-cm
          mountPath: /home/argocd/cmp-server/config/plugin.yaml
          subPath: kustomize-helm.yaml
        - name: argocd-kustomize-helm-workaround
          mountPath: /home/argocd/cmp-server/config/command.sh
          subPath: command.sh
  volumes:
    - name: argocd-kustomize-helm-workaround
      configMap:
        name: argocd-kustomize-helm-workaround
        defaultMode: 0777
    - name: argocd-cmp-cm
      configMap:
        name: argocd-cmp-cm

global:
  domain: argocd.wagner.gg
