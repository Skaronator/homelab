[changelog]
# template for the changelog header
header = """
"""
# template for the changelog body
# https://keats.github.io/tera/docs/#introduction
body = """
{% for group, commits in commits | group_by(attribute="group") %}
## {{ group | striptags | trim | upper_first }}
{% if group is starting_with("<!-- 9") %}
<details>
<summary>View all changes</summary>
{%- for commit in commits | unique(attribute="message") | sort(attribute="scope") %}
- {{ commit.message | upper_first }} [{{ commit.id | truncate(length=7, end="") }}]($REPO/commit/{{ commit.id }})
{%- endfor %}
</details>
{% else %}
{%- for commit in commits | unique(attribute="message") %}
- {% if commit.scope %}**{{ commit.scope }}**: {% endif %}{% if commit.breaking %}[**breaking**] {% endif %}{{ commit.message | upper_first }} [{{ commit.id | truncate(length=7, end="") }}]($REPO/commit/{{ commit.id }})
{%- endfor %}
{% endif %}
{%- endfor %}
"""

# template for the changelog footer
footer = """
"""
# remove the leading and trailing s
trim = true
# postprocessors
postprocessors = [
  { pattern = '\$REPO', replace = "https://github.com/Skaronator/homelab" },
]

[git]
# parse the commits based on https://www.conventionalcommits.org
conventional_commits = true
# filter out the commits that are not conventional
filter_unconventional = true
# process each line of a commit as an individual commit
split_commits = false
# regex for preprocessing the commit messages
commit_preprocessors = [
  # Replace issue numbers
  #{ pattern = '\((\w+\s)?#([0-9]+)\)', replace = "([#${2}](<REPO>/issues/${2}))"},
  # Check spelling of the commit with https://github.com/crate-ci/typos
  # If the spelling is incorrect, it will be automatically fixed.
  #{ pattern = '.*', replace_command = 'typos --write-changes -' },
]
# regex for parsing and grouping commits
commit_parsers = [
  { message = "^chore\\(deps\\)\\: update dependency (.*) to.*", scope="${1}", group = "<!-- 97 --> Updates - Dependencies"  },
  { message = "^chore\\(deps\\)\\: update helm release (.*) to.*", scope="${1}", group = "<!-- 97 --> Updates - Helm Charts"  },
  { message = "^chore\\(deps\\)\\: update (.*) docker tag.*", scope="${1}", group = "<!-- 98 --> Updates - Container Tags"  },
  { message = "^chore\\(deps\\)\\: update (.*) docker digest.*", scope="${1}", group = "<!-- 99 --> Updates - Container Digest"  },
  { message = ".*", group = "<!-- 0 --> What's Changed" },
]
# filter out the commits that are not matched by commit parsers
filter_commits = false
# sort the tags topologically
topo_order = false
# sort the commits inside sections by oldest/newest order
sort_commits = "oldest"
